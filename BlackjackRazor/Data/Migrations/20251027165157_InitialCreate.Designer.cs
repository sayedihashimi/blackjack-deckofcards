// <auto-generated />
using System;
using BlackjackRazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackjackRazor.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251027165157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("BlackjackRazor.Data.CardDrawn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDealer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("BlackjackRazor.Data.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Bankroll")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeckCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeckId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DefaultBet")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("BlackjackRazor.Data.HandRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Bet")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlackjack")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSplitHand")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Outcome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Payout")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId", "Index")
                        .IsUnique();

                    b.ToTable("Hands");
                });

            modelBuilder.Entity("BlackjackRazor.Data.StatRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandsLost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandsPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandsPushed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandsWon")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("BlackjackRazor.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlackjackRazor.Data.CardDrawn", b =>
                {
                    b.HasOne("BlackjackRazor.Data.GameSession", "GameSession")
                        .WithMany("Cards")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("BlackjackRazor.Data.GameSession", b =>
                {
                    b.HasOne("BlackjackRazor.Data.User", "User")
                        .WithMany("GameSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlackjackRazor.Data.HandRecord", b =>
                {
                    b.HasOne("BlackjackRazor.Data.GameSession", "GameSession")
                        .WithMany("Hands")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("BlackjackRazor.Data.StatRecord", b =>
                {
                    b.HasOne("BlackjackRazor.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlackjackRazor.Data.GameSession", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Hands");
                });

            modelBuilder.Entity("BlackjackRazor.Data.User", b =>
                {
                    b.Navigation("GameSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
